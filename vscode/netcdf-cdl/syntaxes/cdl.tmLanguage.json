{
    "scopeName": "source.cdl",
    "patterns": [
        {
            "include": "#expression"
        }
    ],
    "repository": {
        "expression": {
            "patterns": [
                {
                    "include": "#variables-section"
                },
                {
                    "include": "#dimensions-section"
                },
                {
                    "include": "#group-section"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#strings"
                }
            ]
        },
        "variables-section": {
            "name": "meta.variable.section.cdl",
            "begin": "(variables:)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.language.section.cdl"
                }
            },
            "end": "(.*)(?=(dimensions:|data:|types:|group:)([\\s;]*|(//.*))*\\n)",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#variable-definition"
                },
                {
                    "include": "#global-definition"
                },
                {
                    "include": "#global-attribute-definition"
                },
                {
                    "include": "#attribute-definition"
                },
                {
                    "include": "#strings"
                },
                {
                    "name": "constant.temp.cdl",
                    "match": "(\\w+:)(?=notexisting)"
                }
            ]
        },
        "variable-definition": {
            "name": "meta.variable.definition.cdl",
            "begin": "\\s*([^:]\\b[^\\d\\W]+[\\w_/]*)\\s+",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.numeric.cdl"
                }
            },
            "patterns": [
                {
                    "include": "#many-variables-in-one-line"
                },
                {
                    "include": "#comma"
                }
            ],
            "end": ";",
            "endCaptures": {
                "1": {
                    "name": "punctuation.semicolon.cdl"
                }
            }
        },
        "many-variables-in-one-line": {
            "patterns": [
                {
                    "match": "(\\b[^\\d\\W]+[\\w_]*)\\s*",
                    "captures": {
                        "1": {
                            "name": "variable.other.cdl"
                        }
                    }
                },
                {
                    "include": "#dimension-list"
                }
            ]
        },
        "dimension-list": {
            "name": "meta.variable.definition.dimensions.cdl",
            "begin": "(\\()",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.bracket.cdl"
                }
            },
            "patterns": [
                {
                    "match": "\\w+",
                    "name": "entity.dimension.cdl"
                },
                {
                    "match": ",",
                    "name": "punctuation.comma.cdl"
                }
            ],
            "end": "(\\))",
            "endCaptures": {
                "1": {
                    "name": "punctuation.bracket.cdl"
                }
            }
        },
        "global-attribute-definition": {
            "name": "meta.variable.definition.cdl",
            "begin": "\\s*(?<!\\w)(:)([^\\d\\W]+[\\w_]*)\\s+",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.colon.cdl"
                },
                "2": {
                    "name": "support.attribute.global.cdl"
                }
            },
            "patterns": [
                {
                    "include": "#equals"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#comma"
                }
            ],
            "end": ";",
            "endCaptures": {
                "1": {
                    "name": "punctuation.semicolon.cdl"
                }
            }
        },
        "attribute-definition": {
            "name": "meta.variable.definition.cdl",
            "begin": "\\s*([^\\d\\W]+[\\w_]*)(:)([^\\d\\W]+[\\w_]*)\\s+",
            "beginCaptures": {
                "1": {
                    "name": "variable.other.cdl"
                },
                "2": {
                    "name": "punctuation.colon.cdl"
                },
                "3": {
                    "name": "support.attribute.global.cdl"
                }
            },
            "patterns": [
                {
                    "include": "#equals"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#comma"
                }
            ],
            "end": ";",
            "endCaptures": {
                "1": {
                    "name": "punctuation.semicolon.cdl"
                }
            }
        },
        "dimensions-section": {
            "name": "meta.dimensions.section.cdl",
            "begin": "(dimensions:)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.language.section.cdl"
                }
            },
            "end": "(.*)(?=(data:|variables:|types:|group:)([\\s;]*|(//.*))*\\n)",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#dimension-definitions"
                },
                {
                    "include": "#strings"
                }
            ]
        },
        "dimension-definitions": {
            "name": "meta.dimension.definition.cdl",
            "begin": "\\s*(\\b[^\\d\\W]+[\\w_]+)",
            "beginCaptures": {
                "1": {
                    "name": "entity.dimension.cdl"
                }
            },
            "patterns": [
                {
                    "include": "#equals"
                },
                {
                    "name": "constant.numeric.cdl",
                    "match": "\\d+"
                },
                {
                    "include": "#UNLIMITED"
                }
            ],
            "end": ";|,",
            "endCaptures": {
                "1": {
                    "name": "punctuation.semicolon.cdl"
                }
            }
        },
        "group-section": {
            "name": "meta.group.section.cdl",
            "begin": "(group:)\\s+(\\w+)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.language.section.cdl"
                },
                "2": {
                    "name": "variable.group.name.cdl"
                }
            },
            "end": "(.*)(?=(data:|variables:|types:|dimensions:)([\\s;]*|(//.*))*\\n)",
            "patterns": [
                {
                    "include": "#variables-section"
                },
                {
                    "include": "#dimensions-section"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#strings"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "netcdf|variables:|dimensions:|types:|data:|group:",
                    "name": "keyword.language.section.cdl"
                },
                {
                    "match": "_FillValue|valid_range|units|long_name|_Shuffle|_Storage|_ChunkSizes|_Fletcher32|_Endianness|_DeflateLevel",
                    "name": "constant.language.attribute.cdl"
                }
            ]
        },
        "UNLIMITED": {
            "patterns": [
                {
                    "match": "unlimited|UNLIMITED",
                    "name": "constant.numeric.cdl"
                }
            ]
        },
        "equals": {
            "patterns": [
                {
                    "name": "punctuation.equals.cdl",
                    "match": "="
                }
            ]
        },
        "comma": {
            "patterns": [
                {
                    "match": ",",
                    "name": "punctuation.comma.cdl"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.cdl"
                        }
                    },
                    "match": "(//).*$\\n?",
                    "name": "comment.line.double-slash.cdl"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "constant.type.numeric.cdl"
                        }
                    },
                    "match": "char|byte|ubyte|short|ushort|int|uint|long|int64|uint64|float|real|double|string",
                    "name": "storage.type.numeric.cdl"
                },
                {
                    "match": "enum",
                    "name": "storage.type.enum.cdl"
                },
                {
                    "match": "compound",
                    "name": "storage.type.compound.cdl"
                },
                {
                    "match": "opaque\\(\\d+\\)",
                    "name": "storage.type.opaque.cdl"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.cdl",
                    "begin": "(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.begin.quote.double.cdl"
                        }
                    },
                    "end": "(\")",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.end.quote.double.cdl"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.cdl",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        }
    }
}